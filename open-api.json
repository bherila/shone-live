{"openapi":"3.0.0","info":{"title":"Piki","description":"Piki Server","version":"0.1","contact":{}},"tags":[],"servers":[],"components":{"schemas":{"LoginDto":{"type":"object","properties":{"email":{"type":"string","description":"Although auth use identifier other than email,\n    for login we only use email","example":"myemail@gmail.com"},"password":{"type":"string","description":"a secret passcode, for a user its a bcrypt salted user submitted string","example":"my password"}},"required":["email","password"]},"JwtResponseWithUser":{"type":"object","properties":{}},"StripeAddress":{"type":"object","properties":{"city":{"type":"string","description":"the city name","example":"New York"},"country":{"type":"string","description":"Standard 2 character country abbreviation,\n    currently we only support US","example":"US"},"line1":{"type":"string","description":"Full street address information, number and street name","example":"1 Broadway"},"line2":{"type":"string","description":"Second address line often used for the unit number","example":"Suite 1000"},"postal_code":{"type":"string","description":"5 digit standard postal code","example":"10004"},"state":{"type":"string","description":"2 leter standard state abbreviation","example":"NY"}},"required":["city","country","line1","postal_code","state"]},"StripeShippingAddress":{"type":"object","properties":{"city":{"type":"string","description":"the city name","example":"New York"},"country":{"type":"string","description":"Standard 2 character country abbreviation,\n    currently we only support US","example":"US"},"line1":{"type":"string","description":"Full street address information, number and street name","example":"1 Broadway"},"line2":{"type":"string","description":"Second address line often used for the unit number","example":"Suite 1000"},"postal_code":{"type":"string","description":"5 digit standard postal code","example":"10004"},"state":{"type":"string","description":"2 leter standard state abbreviation","example":"NY"},"name":{"type":"string","description":"the name of the person recieving mail at this address","example":"John Smith"},"phone":{"type":"string","description":"a 10 digit United States format phone number,\n    no country code needed","example":"555-555-1234"}},"required":["city","country","line1","postal_code","state"]},"CreateUserDto":{"type":"object","properties":{"username":{"type":"string","description":"display username for use in the app.\n    must be unique across users","example":"my_username_without_spaces"},"seller":{"type":"boolean","description":"used for various authorizations sellers must be validated","example":true},"address":{"allOf":[{"$ref":"#/components/schemas/StripeAddress"},{"description":"full address object\n    can be passed on creation\n    is the home address of the user","example":{"city":"New York","country":"US","line1":"1 Broadway","line2":"Suite 1000","postal_code":"10004","state":"NY"}}]},"email":{"type":"string","description":"email used for unique user identification","example":"myemail@gmail.com"},"first_name":{"type":"string","description":"users first name","example":"John"},"last_name":{"type":"string","description":"users last name","example":"Smith"},"phone":{"type":"string","description":"users phone number","example":"555-555-1234"},"shipping":{"allOf":[{"$ref":"#/components/schemas/StripeShippingAddress"},{"description":"full address object\n    can be passed on creation\n    is the shipping address as saved in Stripe of the user","example":{"city":"New York","country":"US","line1":"1 Broadway","line2":"Suite 1000","postal_code":"10004","state":"NY"}}]}}},"RegisterDto":{"type":"object","properties":{"password":{"type":"string","description":"a secret passcode, for a user its a bcrypt salted user\n    submitted string","example":"my password"},"user":{"allOf":[{"$ref":"#/components/schemas/CreateUserDto"},{"description":"currently a user must be passed in\n    because all auth must now be associated with a user.\n    When we support multiple auth per user,\n    then user id will be available as an option instead","example":{"id":"cus_I710o5QGkr26Ht","username":"test user 1","first_name":"bretton","last_name":"auerbach","phone":"7188583077","seller":true,"email":"abcd@me.co"}}]}},"required":["password","user"]},"Sku":{"type":"object","properties":{"id":{"type":"string"},"price":{"type":"number"},"currency":{"type":"string"},"active_at":{"format":"date-time","type":"string"},"inactive_at":{"format":"date-time","type":"string"},"attributes":{"type":"string"},"quantity":{"type":"number"},"current_quantity":{"type":"number"},"product":{"$ref":"#/components/schemas/Product"},"file":{"$ref":"#/components/schemas/File"},"orderSkus":{"type":"array","items":{"$ref":"#/components/schemas/OrderSku"}},"showId":{"type":"number"},"show":{"$ref":"#/components/schemas/Show"}},"required":["id","price","currency","active_at","inactive_at","attributes","quantity","current_quantity","product","file","orderSkus","showId","show"]},"OrderSku":{"type":"object","properties":{"order":{"$ref":"#/components/schemas/Order"},"sku":{"$ref":"#/components/schemas/Sku"},"quantity":{"type":"number"}},"required":["order","sku","quantity"]},"Order":{"type":"object","properties":{"id":{"type":"string"},"total_amount":{"type":"number"},"currency":{"type":"string"},"email":{"type":"string"},"status":{"type":"string"},"stripe_created":{"format":"date-time","type":"string"},"stripe_updated":{"format":"date-time","type":"string"},"cancelled":{"format":"date-time","type":"string"},"fulfiled":{"format":"date-time","type":"string"},"paid":{"format":"date-time","type":"string"},"returned":{"format":"date-time","type":"string"},"amount_returned":{"type":"number"},"orderSkus":{"type":"array","items":{"$ref":"#/components/schemas/OrderSku"}},"files":{"type":"array","items":{"$ref":"#/components/schemas/File"}},"address":{"$ref":"#/components/schemas/Address"},"show":{"$ref":"#/components/schemas/Show"},"card":{"$ref":"#/components/schemas/Card"},"user":{"$ref":"#/components/schemas/User"}},"required":["id","total_amount","currency","email","status","stripe_created","stripe_updated","cancelled","fulfiled","paid","returned","amount_returned","orderSkus","files","address","show","card","user"]},"File":{"type":"object","properties":{"id":{"type":"number"},"name":{"type":"string"},"type":{"type":"string"},"user":{"$ref":"#/components/schemas/User"},"product":{"$ref":"#/components/schemas/Product"},"order":{"$ref":"#/components/schemas/Order"},"sku":{"$ref":"#/components/schemas/Sku"}},"required":["id","name","type","user","product","order","sku"]},"Product":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"user":{"$ref":"#/components/schemas/User"},"show":{"$ref":"#/components/schemas/Show"},"files":{"type":"array","items":{"$ref":"#/components/schemas/File"}},"skus":{"type":"array","items":{"$ref":"#/components/schemas/Sku"}}},"required":["id","name","description","user","show","files","skus"]},"PrivateFile":{"type":"object","properties":{"id":{"type":"number"},"key":{"type":"string"},"owner":{"$ref":"#/components/schemas/User"},"show":{"$ref":"#/components/schemas/Show"}},"required":["id","key","owner","show"]},"Show":{"type":"object","properties":{"id":{"type":"number"},"date":{"format":"date-time","type":"string"},"start":{"format":"date-time","type":"string"},"end":{"format":"date-time","type":"string"},"length":{"type":"number"},"description":{"type":"string"},"name":{"type":"string"},"user":{"$ref":"#/components/schemas/User"},"products":{"type":"array","items":{"$ref":"#/components/schemas/Product"}},"skus":{"type":"array","items":{"$ref":"#/components/schemas/Sku"}},"orders":{"type":"array","items":{"$ref":"#/components/schemas/Order"}},"privateFiles":{"type":"array","items":{"$ref":"#/components/schemas/PrivateFile"}}},"required":["id","date","start","end","length","description","name","user","products","skus","orders","privateFiles"]},"Auth":{"type":"object","properties":{"id":{"type":"number"},"identifier":{"type":"string"},"password":{"type":"string"},"user":{"$ref":"#/components/schemas/User"}},"required":["id","identifier","password","user"]},"S3File":{"type":"object","properties":{"id":{"type":"number"},"url":{"type":"string"},"key":{"type":"string"}},"required":["id","url","key"]},"User":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"},"first_name":{"type":"string"},"last_name":{"type":"string"},"phone":{"type":"string"},"seller":{"type":"boolean"},"email":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/components/schemas/Card"}},"shows":{"type":"array","items":{"$ref":"#/components/schemas/Show"}},"auths":{"type":"array","items":{"$ref":"#/components/schemas/Auth"}},"products":{"type":"array","items":{"$ref":"#/components/schemas/Product"}},"files":{"type":"array","items":{"$ref":"#/components/schemas/File"}},"avatar":{"$ref":"#/components/schemas/S3File"},"privateFiles":{"type":"array","items":{"$ref":"#/components/schemas/PrivateFile"}},"orders":{"type":"array","items":{"$ref":"#/components/schemas/Order"}},"userAddresses":{"type":"array","items":{"$ref":"#/components/schemas/UserAddress"}}},"required":["id","username","first_name","last_name","phone","seller","email","cards","shows","auths","products","files","privateFiles","orders","userAddresses"]},"UserAddress":{"type":"object","properties":{"user":{"$ref":"#/components/schemas/User"},"address":{"$ref":"#/components/schemas/Address"}},"required":["user","address"]},"Address":{"type":"object","properties":{"id":{"type":"number"},"city":{"type":"string"},"country":{"type":"string"},"line1":{"type":"string"},"line2":{"type":"string"},"postal_code":{"type":"string"},"state":{"type":"string"},"name":{"type":"string"},"phone":{"type":"string"},"userAddresses":{"type":"array","items":{"$ref":"#/components/schemas/UserAddress"}},"cards":{"type":"array","items":{"$ref":"#/components/schemas/Card"}},"orders":{"type":"array","items":{"$ref":"#/components/schemas/Order"}}},"required":["id","city","country","line1","line2","postal_code","state","name","phone","userAddresses","cards","orders"]},"Card":{"type":"object","properties":{"id":{"type":"string"},"address_zip_check":{"type":"string"},"brand":{"type":"string"},"country":{"type":"string"},"cvc_check":{"type":"string"},"exp_month":{"type":"number"},"exp_year":{"type":"number"},"fingerprint":{"type":"string"},"funding":{"type":"string"},"last4":{"type":"string"},"name":{"type":"string"},"address":{"$ref":"#/components/schemas/Address"},"user":{"$ref":"#/components/schemas/User"},"orders":{"type":"array","items":{"$ref":"#/components/schemas/Order"}}},"required":["id","address_zip_check","brand","country","cvc_check","exp_month","exp_year","fingerprint","funding","last4","name","address","user","orders"]},"UpdateUserDto":{"type":"object","properties":{"username":{"type":"string","description":"display username for use in the app.\n    must be unique across users","example":"my_username_without_spaces"},"seller":{"type":"boolean","description":"used for various authorizations sellers must be validated","example":true},"address":{"allOf":[{"$ref":"#/components/schemas/StripeAddress"},{"description":"full address object\n    can be passed on creation\n    is the home address of the user","example":{"city":"New York","country":"US","line1":"1 Broadway","line2":"Suite 1000","postal_code":"10004","state":"NY"}}]},"email":{"type":"string","description":"email used for unique user identification","example":"myemail@gmail.com"},"first_name":{"type":"string","description":"users first name","example":"John"},"last_name":{"type":"string","description":"users last name","example":"Smith"},"phone":{"type":"string","description":"users phone number","example":"555-555-1234"},"shipping":{"allOf":[{"$ref":"#/components/schemas/StripeShippingAddress"},{"description":"full address object\n    can be passed on creation\n    is the shipping address as saved in Stripe of the user","example":{"city":"New York","country":"US","line1":"1 Broadway","line2":"Suite 1000","postal_code":"10004","state":"NY"}}]}}},"UploadFileDto":{"type":"object","properties":{"file":{"type":"file","properties":{"file":{"type":"string","format":"binary"}},"description":"a single file sent as multipart/form-data\n    server expects this param to be called 'file'\n    the format can be any kind we do not validate it or process it\n    the file simply goes up to the AWS S3 bucket and is saved there","example":"'file': <any-kind-of-binary-file>"},"user_id":{"type":"string","description":"the id of the user who uploaded this file\n    we need this user id to associate the user so we can\n    1. let only this user delete the file\n    2. be able to return all this users files for them to manage","example":"cus_IPqRS333voIGbS"}},"required":["file","user_id"]},"AwsS3FileCreateResponse":{"type":"object","properties":{"url":{"type":"string","description":"the URL for the avatar image on S3"},"key":{"type":"string","description":"the S3 bucket generated key"},"id":{"type":"number","description":"our database ID for the object"}},"required":["url","key","id"]},"AwsS3PrivateFileCreateResponse":{"type":"object","properties":{"key":{"type":"string","description":"the S3 bucket generated key"},"id":{"type":"number","description":"our database ID for the object"},"owner":{"type":"object","description":"the owner has the user nested with user id"}},"required":["key","id","owner"]},"Coffee":{"type":"object","properties":{"id":{"type":"number"},"name":{"type":"string"},"brand":{"type":"string"},"recommendations":{"type":"number"},"flavors":{"type":"array","items":{"$ref":"#/components/schemas/Flavor"}}},"required":["id","name","brand","recommendations","flavors"]},"Flavor":{"type":"object","properties":{"id":{"type":"number"},"name":{"type":"string"},"coffees":{"type":"array","items":{"$ref":"#/components/schemas/Coffee"}}},"required":["id","name","coffees"]},"CreateCoffeeDto":{"type":"object","properties":{"name":{"type":"string","description":"the marketing name for the coffee","example":"Philz original roast"},"brand":{"type":"string","description":"the name of the company that makes the coffee","example":"Philz"},"flavors":{"description":"a list of available flavorings as an array","example":["hazelnut","mocha"],"type":"array","items":{"type":"string"}}},"required":["name","brand","flavors"]},"UpdateCoffeeDto":{"type":"object","properties":{"name":{"type":"string","description":"the marketing name for the coffee","example":"Philz original roast"},"brand":{"type":"string","description":"the name of the company that makes the coffee","example":"Philz"},"flavors":{"description":"a list of available flavorings as an array","example":["hazelnut","mocha"],"type":"array","items":{"type":"string"}}}},"CreateFileDto":{"type":"object","properties":{"userId":{"type":"string"},"productId":{"type":"number"},"showId":{"type":"number"},"type":{"type":"string"}},"required":["userId","type"]},"CreateProductDto":{"type":"object","properties":{"user_id":{"type":"string","description":"the user who added this product to the database\n    currently each user only has access to their own product category,\n    so the same product may exist for multiple users","example":"cus_IPqRS333voIGbS"},"show_id":{"type":"number","description":"the show where this product first shows up,\n    can exist in multiple shows\n    unlike SKUs which only have a life of one show","example":"1"},"name":{"type":"string","description":"this is the overall product name","example":"nike pro sweat shirt"},"description":{"type":"string","description":"the product description for display to the customer","example":"this model of sweatshirt that has the most stretch\n    and performance of any fabric that Nike offers, perfect for long runs"}},"required":["user_id","show_id","name","description"]},"UpdateProductDto":{"type":"object","properties":{"user_id":{"type":"string","description":"the user who added this product to the database\n    currently each user only has access to their own product category,\n    so the same product may exist for multiple users","example":"cus_IPqRS333voIGbS"},"show_id":{"type":"number","description":"the show where this product first shows up,\n    can exist in multiple shows\n    unlike SKUs which only have a life of one show","example":"1"},"name":{"type":"string","description":"this is the overall product name","example":"nike pro sweat shirt"},"description":{"type":"string","description":"the product description for display to the customer","example":"this model of sweatshirt that has the most stretch\n    and performance of any fabric that Nike offers, perfect for long runs"}}},"CreateShowDto":{"type":"object","properties":{"user_id":{"type":"string","description":"the user who is hosting this show\n    currently shows only have one host who owns the show data","example":"cus_IPqRS333voIGbS"},"date":{"type":"string","description":"this should inclue the time that the show starts at\n    (it's a datetime, format https://en.wikipedia.org/wiki/ISO_8601)","example":"2020-11-22T20:39:12+00:00"},"length":{"type":"number","description":"expected length of the show in seconds.\n    (currently no enforcement of endtime)","example":"3600"},"description":{"type":"string","description":"the display description for customers,\n    this should entice users to check out the show","example":"The coolest host with the coolest products will show you\n    everything you've been dying to purchase this season"},"name":{"type":"string","description":"show name","example":"The Ski Show - New Ski Bindings Edition"},"previewId":{"type":"number","description":"the id of the main preview video for the show","example":"1"}},"required":["user_id","date","length","description","name","previewId"]},"UpdateShowDto":{"type":"object","properties":{"user_id":{"type":"string","description":"the user who is hosting this show\n    currently shows only have one host who owns the show data","example":"cus_IPqRS333voIGbS"},"date":{"type":"string","description":"this should inclue the time that the show starts at\n    (it's a datetime, format https://en.wikipedia.org/wiki/ISO_8601)","example":"2020-11-22T20:39:12+00:00"},"length":{"type":"number","description":"expected length of the show in seconds.\n    (currently no enforcement of endtime)","example":"3600"},"description":{"type":"string","description":"the display description for customers,\n    this should entice users to check out the show","example":"The coolest host with the coolest products will show you\n    everything you've been dying to purchase this season"},"name":{"type":"string","description":"show name","example":"The Ski Show - New Ski Bindings Edition"},"previewId":{"type":"number","description":"the id of the main preview video for the show","example":"1"},"start":{"type":"string","description":"time the show actually started at","example":"2020-11-22T20:39:12+00:00"},"end":{"type":"string","description":"time the show actually ended at","example":"2020-11-22T20:39:12+00:00"}},"required":["start","end"]},"CreateCardDto":{"type":"object","properties":{"user":{"type":"string","description":"the user id of the owner of the card in stripe","example":"cus_IPqRS333voIGbS"},"stripeCardToken":{"type":"string","description":"the card id returned from stripe\n    (card creation should happen directly between the client and stripe.\n    we just take the token, however we also want to save the address\n    so that should be passed separately\n    or we can add it to this endpoint if that's easier)","example":"card_1HqnEC2eZvKYlo2Cs3wf41sM"}},"required":["user","stripeCardToken"]},"CreateSkuDto":{"type":"object","properties":{"product":{"type":"string","description":"the id of the product associated with the SKU\n    every SKU must currently belong to a product\n    this follows the pattern of Stipe, which processes all the unit sales","example":"prod_I7NzQjrlgEJ9ZG"},"show":{"type":"number","description":"the id of the show that the SKU is being sold in\n    making SKUs unique to shows controls the quantity and the price\n    for that show","example":"1"},"price":{"type":"number","description":"price of the item in cents eg a price of $1 is 100","example":"100"},"attributes":{"type":"string","description":"any descriptive details that it permutes on\n    eg {\"size\": \"medium\", \"gender\": \"unisex\"}","example":"{\"size\": \"medium\"}"},"quantity":{"type":"number","description":"the quantity at the start of the show,\n    this does not get updated as the show goes on\n    there is a different field for the current quantity\n    called current_quantity. (This is managed by the server based on sales.)","example":"100"}},"required":["product","show","price","attributes","quantity"]},"UpdateSkuDto":{"type":"object","properties":{"product":{"type":"string","description":"the id of the product associated with the SKU\n      every SKU must currently belong to a product\n      this follows the pattern of Stipe, which processes all the unit sales","example":"prod_I7NzQjrlgEJ9ZG"},"show":{"type":"number","description":"the id of the show that the SKU is being sold in\n      making SKUs unique to shows controls the quantity and the price\n      for that show","example":"1"},"price":{"type":"number","description":"price of the item in cents eg a price of $1 is 100","example":"100"},"active_at":{"type":"string","description":"the time the sku goes live (ie available for purchase),\n    currently all skus go live at teh start of the show\n    format is ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601)","example":"2020-11-22T20:39:12+00:00"},"inactive_at":{"type":"string","description":"the time the SKU is no longer available for purchase,\n    currently there are no purchases allowed after the end of the show\n    format is ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601)","example":"2020-11-22T20:39:12+00:00"},"attributes":{"type":"string","description":"any descriptive details that it permutes on\n    eg {\"size\": \"medium\", \"gender\": \"unisex\"}","example":"{\"size\": \"medium\"}"},"quantity":{"type":"number","description":"the quantity at the start of the show,\n    this does not get updated as the show goes on\n    there is a different field for the current quantity\n    called current_quantity. (This is managed by the server based on sales.)","example":"100"}},"required":["product","show","price","active_at","inactive_at","attributes","quantity"]},"CreateOrderDto":{"type":"object","properties":{"quantity":{"type":"number","description":"the number of units the customer would like to order","example":"5"},"shipping":{"allOf":[{"$ref":"#/components/schemas/StripeAddress"},{"description":"the shipping address for the order,\n    billing address is saved on the card and something separate","example":{"city":"New York","country":"US","line1":"1 Broadway","line2":"Suite 1000","postal_code":"10004","state":"NY"}}]},"email":{"type":"string","description":"a valid email for the receipt\n    originally users could not be created without receipt\n    so this was marked optional,\n    for now we just need to make sure it's passed and can deal with caching","example":"myemail@gmail.com"},"shipping_name":{"type":"string","description":"the name of the recipient of the order\n    also optional, if not passed user name is used","example":"John Smith"},"sku":{"type":"string","description":"right now one sku can be passed at a time","example":"sku_IRMW5E3niKt154"},"card_id":{"type":"string","description":"the id of the stripe card being used to pay for the order","example":"card_1HqnEC2eZvKYlo2Cs3wf41sM"},"user_id":{"type":"string","description":"the id of the user making the purchase","example":"cus_IPqRS333voIGbS"},"show_id":{"type":"number","description":"id of the show which the order is being made from\n    will be used in the future as a sanity check that the sku is right","example":"1"}},"required":["quantity","shipping","email","shipping_name","sku","card_id","user_id","show_id"]},"CreateAddressDto":{"type":"object","properties":{"user_id":{"type":"string","description":"the id of the user who added this address","example":"cus_IPqRS333voIGbS"},"city":{"type":"string","description":"the city name","example":"New York"},"country":{"type":"string","description":"Standard 2 character country abbreviation,\n    currently we only support US","example":"US"},"line1":{"type":"string","description":"Full street address information, number and street name","example":"1 Broadway"},"line2":{"type":"string","description":"Second address line often used for the unit number","example":"Suite 1000"},"postal_code":{"type":"string","description":"5 digit standard postal code","example":"10004"},"state":{"type":"string","description":"2 leter standard state abbreviation","example":"NY"},"name":{"type":"string","description":"shipping name for the address\n    could be customer name,\n    or if they ship to someone else could be receipient name","example":"John Smith"},"phone":{"type":"string","description":"a 10 digit United States format phone number,\n    no country code needed","example":"555-555-1234"}},"required":["user_id","city","country","line1","postal_code","state"]}}},"paths":{"/auth/login":{"post":{"operationId":"AuthController_login","summary":"returns JWT token if vaid username and password,\n    includes user object for client convenience","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginDto"}}}},"responses":{"201":{"description":"returns \"created\" after making new JWT if valid credentials.\n    Token valid for 2 weeks","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JwtResponseWithUser"}}}},"401":{"description":"Unauthorized if not valid credentials."}},"tags":["auth"]}},"/auth/register":{"post":{"operationId":"AuthController_create","summary":"returns JWT token if vaid username and password,\n  also returns the user object with the parameters passed in","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterDto"}}}},"responses":{"201":{"description":"creates a user record and an auth record, returns JWT.\n    Token valid for 2 weeks","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JwtResponseWithUser"}}}}},"tags":["auth"]}},"/users":{"get":{"operationId":"UsersController_findAll","summary":"returns all users","parameters":[{"name":"limit","required":true,"in":"query","schema":{"type":"number"}},{"name":"offset","required":true,"in":"query","schema":{"minimum":0,"type":"number"}}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}}},"tags":["users"]},"post":{"operationId":"UsersController_create","summary":"creates a new user given unique fields","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserDto"}}}},"responses":{"201":{"description":"created user and any associated addresses passed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"tags":["users"]}},"/users/{id}":{"get":{"operationId":"UsersController_findOne","summary":"returns a single user by their id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"tags":["users"]},"patch":{"operationId":"UsersController_update","summary":"updates a user, eg their address","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserDto"}}}},"responses":{"200":{"description":"updated user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"tags":["users"]},"delete":{"operationId":"UsersController_remove","summary":"hard deletes a user, cascading...probably should never use in\n    production; will switch to soft delete","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"deleted user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"tags":["users"]}},"/users/avatar":{"post":{"operationId":"UsersController_addAvatar","summary":"adds the single profile image for the user\n  will override if a new avatar image uploaded","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UploadFileDto"}}}},"responses":{"201":{"description":"uploaded avatar image","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AwsS3FileCreateResponse"}}}}},"tags":["users"]}},"/users/{userId}/avatar":{"delete":{"operationId":"UsersController_deleteAvatar","summary":"removes the single profile image for the user\n  (profile image is optional)","parameters":[{"name":"userId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":"deleted avatar image"}},"tags":["users"]}},"/users/files":{"post":{"operationId":"UsersController_addPrivateFile","summary":"a user can upload any file,\n  this is a private file so can only get access through the user get,\n  non-users cannot access these files","parameters":[],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/UploadFileDto"}}}},"responses":{"201":{"description":"uploaded file","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AwsS3PrivateFileCreateResponse"}}}}},"tags":["users"]}},"/users/{userId}/files":{"get":{"operationId":"UsersController_getAllPrivateFiles","summary":"get all the files uploaded by a user","parameters":[{"name":"userId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"all the files uploaded by this user","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AwsS3PrivateFileCreateResponse"}}}}}},"tags":["users"]}},"/users/{userId}/files/{fileId}":{"delete":{"operationId":"UsersController_deleteFile","summary":"delete a file,\n  (only the user who created the file can delete it)","parameters":[{"name":"userId","required":true,"in":"path","schema":{"type":"string"}},{"name":"fileId","required":true,"in":"path","schema":{"type":"number"}}],"responses":{"204":{"description":"deleted file"}},"tags":["users"]}},"/coffees":{"get":{"operationId":"CoffeesController_findAll","parameters":[{"name":"limit","required":true,"in":"query","schema":{"type":"number"}},{"name":"offset","required":true,"in":"query","schema":{"minimum":0,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Coffee"}}}}}},"tags":["(demo code)"]},"post":{"operationId":"CoffeesController_create","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCoffeeDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Coffee"}}}}},"tags":["(demo code)"]}},"/coffees/{id}":{"get":{"operationId":"CoffeesController_findOne","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Coffee"}}}}},"tags":["(demo code)"]},"patch":{"operationId":"CoffeesController_update","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateCoffeeDto"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Coffee"}}}}},"tags":["(demo code)"]},"delete":{"operationId":"CoffeesController_remove","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Coffee"}}}}},"tags":["(demo code)"]}},"/files/type/{type}/model/{model}":{"get":{"operationId":"FilesController_findAll","parameters":[{"name":"type","required":true,"in":"path","schema":{"type":"string"}},{"name":"model","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"string"}}}}},"tags":["files"]}},"/files/image/{imgpath}":{"get":{"operationId":"FilesController_seeUploadedFile","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["files"]}},"/files/image":{"post":{"operationId":"FilesController_uploadedFile","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFileDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/File"}}}}},"tags":["files"]}},"/files/images":{"post":{"operationId":"FilesController_uploadMultipleFiles","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFileDto"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"type":"object"}}}}}},"tags":["files"]}},"/files/{id}":{"delete":{"operationId":"FilesController_remove","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/File"}}}}},"tags":["files"]}},"/products":{"get":{"operationId":"ProductsController_findAll","summary":"returns all products","parameters":[{"name":"limit","required":true,"in":"query","schema":{"type":"number"}},{"name":"offset","required":true,"in":"query","schema":{"minimum":0,"type":"number"}}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Product"}}}}}},"tags":["products"]},"post":{"operationId":"ProductsController_create","summary":"creates a new product","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateProductDto"}}}},"responses":{"201":{"description":"create product","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}}},"tags":["products"]}},"/products/{id}":{"get":{"operationId":"ProductsController_findOne","summary":"returns a product by it's id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}}},"tags":["products"]},"patch":{"operationId":"ProductsController_update","summary":"updates a product, eg the description","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateProductDto"}}}},"responses":{"200":{"description":"updated product","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}}},"tags":["products"]},"delete":{"operationId":"ProductsController_remove","summary":"hard deletes a product, cascading","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"deleted product","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}}},"tags":["products"]}},"/shows":{"get":{"operationId":"ShowsController_findAll","summary":"returns all shows","parameters":[{"name":"userId","required":true,"in":"query","description":"this is the user who created the show\n    it is actually optional - seems showed required by bug","example":"cus_IPqRS333voIGbS","schema":{"type":"string"}},{"name":"startDate","required":false,"in":"query","description":"earlierst start date-time of show to query INCLUSIVE\n     https://en.wikipedia.org/wiki/ISO_8601\n     note this currently has no logical validation eg that format is correct\n     that date is reasonable, that start is before end, that is a TODO, so for now please use carefully\n     it is actually optional - seems showed required by bug","example":"2020-11-22T20:39:12+00:00","schema":{"type":"string"}},{"name":"endDate","required":false,"in":"query","description":"latest start date-time of show to query INCLUSIVE\n     https://en.wikipedia.org/wiki/ISO_8601\n     note this currently has no logical validation eg that format is correct\n     that date is reasonable, that start is before end, that is a TODO, so for now please use carefully\n     it is actually optional - seems showed required by bug","example":"2020-11-22T20:39:12+00:00","schema":{"type":"string"}},{"name":"limit","required":false,"in":"query","schema":{"type":"number"}},{"name":"offset","required":false,"in":"query","schema":{"minimum":0,"type":"number"}},{"name":"user_id","required":false,"in":"query","schema":{"type":"number"}}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Show"}}}}}},"tags":["shows"],"security":[{"bearer":[]}]},"post":{"operationId":"ShowsController_create","summary":"creates a new show","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateShowDto"}}}},"responses":{"201":{"description":"created show","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Show"}}}}},"tags":["shows"],"security":[{"bearer":[]}]}},"/shows/{id}":{"get":{"operationId":"ShowsController_findOne","summary":"returns a single show by its id","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Show"}}}}},"tags":["shows"],"security":[{"bearer":[]}]},"patch":{"operationId":"ShowsController_update","summary":"updates a show, eg the start date/time\n    although request body listed as required, feilds are just example fields\n    any subset can be sent (they aren't all needed)","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateShowDto"}}}},"responses":{"200":{"description":"updated show","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Show"}}}}},"tags":["shows"],"security":[{"bearer":[]}]},"delete":{"operationId":"ShowsController_remove","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Show"}}}}},"tags":["shows"],"security":[{"bearer":[]}]}},"/cards":{"post":{"operationId":"CardsController_create","summary":"takes the card id created by stripe and saves it on the user","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCardDto"}}}},"responses":{"201":{"description":"save the stripe card id on the user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Card"}}}}},"tags":["cards"]}},"/skus":{"post":{"operationId":"SkusController_create","summary":"creates a new SKU","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSkuDto"}}}},"responses":{"201":{"description":"creates SKU associated with a product and a show","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Sku"}}}}},"tags":["skus"]}},"/skus/{id}":{"patch":{"operationId":"SkusController_update","summary":"updates a SKU, eg their address","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSkuDto"}}}},"responses":{"200":{"description":"updated sku","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Sku"}}}}},"tags":["skus"]},"delete":{"operationId":"SkusController_remove","summary":"hard deletes a SKU, cascading","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"deleted sku","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Sku"}}}}},"tags":["skus"]}},"/orders":{"get":{"operationId":"OrdersController_findAll","summary":"returns all orders filtered by the query params","parameters":[{"name":"show_id","required":false,"in":"query","description":"filter the orders by the show they were placed from","example":"1","schema":{"type":"number"}},{"name":"limit","required":false,"in":"query","schema":{"type":"number"}},{"name":"offset","required":false,"in":"query","schema":{"minimum":0,"type":"number"}}],"responses":{"200":{"description":"returns all orders","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Order"}}}}}},"tags":["orders"]},"post":{"operationId":"OrdersController_create","summary":"creates an order in stripe\n  and then pays the order so it gets completed\n  on successful order processing returns the order\n  (if units in stock, payment valid, eventually address validation included)","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOrderDto"}}}},"responses":{"201":{"description":"created an order","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}}},"tags":["orders"]}},"/addresses":{"post":{"operationId":"AddressesController_create","summary":"creates a new address","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateAddressDto"}}}},"responses":{"201":{"description":"created an address independent of stripe","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}}},"tags":["addresses"]}},"/alert":{"post":{"operationId":"AlertController_sendAlertToAll","parameters":[],"responses":{"200":{"description":""}},"tags":["alert"]}}}}